# Testing is horrorbly inconsistent

# "check" also outputs the output of each test, in color!
add_custom_target(check COMMAND ${CMAKE_COMMAND} -E env CLICOLOR_FORCE=1
	${CMAKE_CTEST_COMMAND} --verbose)

set_directory_properties(PROPERTIES
	ADDITIONAL_MAKE_CLEAN_FILES "db.test" # Generated by reset.cmake
	ADDITIONAL_MAKE_CLEAN_FILES "createfail.db" # Gen. by createfail.cmake
	ADDITIONAL_MAKE_CLEAN_FILES "suite.db" # Gen. by common.cmake
	ADDITIONAL_MAKE_CLEAN_FILES ".t" # Gen. by suite-misc.cmake
	ADDITIONAL_MAKE_CLEAN_FILES ".f" # Gen. by suite-misc.cmake
	)

include_directories("${CMAKE_SOURCE_DIR}/src")
include_directories("${CMAKE_BINARY_DIR}/src")

foreach(PFILE
		siolpain
		fmt
		stack
		cas
		hook
		hook2
		stress1
		fmtarr
		bench-expire
		expire
		dumptwice
		syncget
		nsabuse
		drain
		merge
		chkkey
		api/array
		api/refs
		)
	string(REPLACE "/" "_" PROG "${PFILE}")
	add_executable(test-${PROG} "${PFILE}.c")
	target_link_libraries(test-${PROG} sdb_static)
	add_test(NAME "${PROG}" COMMAND "$<TARGET_FILE:test-${PROG}>")
endforeach()

set(COMMON_ARGS "-DSDBEXE=$<TARGET_FILE:sdb_exe>"
	"-DCOMMON=${CMAKE_CURRENT_SOURCE_DIR}/common.cmake")

add_executable(test-reset "reset/test-reset.c")
target_link_libraries(test-reset sdb_static)
add_test(NAME "reset" COMMAND ${CMAKE_COMMAND} ${COMMON_ARGS}
	"-DTESTEXE=$<TARGET_FILE:test-reset>"
	-P "${CMAKE_CURRENT_SOURCE_DIR}/reset.cmake")

foreach(NAME
		createfail
		delkey
		suite-simple
		suite-collections
		suite-json
		suite-misc
		)
	add_test(NAME "${NAME}" COMMAND ${CMAKE_COMMAND} ${COMMON_ARGS}
		-P "${CMAKE_CURRENT_SOURCE_DIR}/${NAME}.cmake")
endforeach()

# There was also a "test" called testgrep.sh and it seems it only tests the
# speed between sdb and the system's grep, where the latter is usually faster,
# says a comment in the script. It's not a real test and depends on an
# external application, so it isn't included here.

